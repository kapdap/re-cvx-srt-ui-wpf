<UserControl x:Class="SRTPluginUIRECVXWPF.Controls.TitlebarControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SRTPluginUIRECVXWPF.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="30" d:DesignWidth="800" Loaded="UserControl_Loaded">
    <UserControl.Style>
        <Style TargetType="{x:Type UserControl}">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Foreground" Value="{x:Static SystemColors.WindowTextBrush}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False">
                    <Setter Property="Foreground" Value="#999999" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <Grid Background="{x:Static SystemColors.WindowBrush}" Height="30">
        <Grid.Resources>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="8,0,0,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type Path}">
                <Setter Property="Width" Value="45" />
                <Setter Property="Height" Value="29" />
            </Style>
            <Style x:Key="TitlebarButtonBaseStyle" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="45" />
                <Setter Property="Height" Value="29" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False">
                        <Setter Property="Foreground" Value="#999999" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TitlebarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TitlebarButtonBaseStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True">
                        <Setter Property="Foreground" Value="{x:Static SystemColors.WindowTextBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsPressed}" Value="True">
                        <Setter Property="Foreground" Value="{x:Static SystemColors.WindowTextBrush}" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="TitlebarButtonBorder"
					                Background="Transparent"
					                BorderThickness="0"
					                SnapsToDevicePixels="true">
                                <ContentPresenter Name="TitlebarButtonContentPresenter"
						                          Margin="0"
						                          Focusable="False"
						                          VerticalAlignment="Center"
						                          HorizontalAlignment="Center"
						                          RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="TitlebarButtonBorder" Property="Background" Value="#E5E5E5" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="TitlebarButtonBorder" Property="Background" Value="#CACACB" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TitlebarMinimizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TitlebarButtonStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ShowMinimizeButton}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TitlebarMaximizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TitlebarButtonStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ShowMaximizeButton}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TitlebarCloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TitlebarButtonBaseStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ShowCloseButton}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True">
                        <Setter Property="Foreground" Value="#FFFFFF" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsPressed}" Value="True">
                        <Setter Property="Foreground" Value="#FFFFFF" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="TitlebarCloseButtonBorder"
					                Background="Transparent"
					                BorderThickness="0"
					                SnapsToDevicePixels="true">
                                <ContentPresenter Name="TitlebarCloseButtonContentPresenter"
						                          Margin="0"
						                          Focusable="False"
						                          VerticalAlignment="Center"
						                          HorizontalAlignment="Center"
						                          RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="TitlebarCloseButtonBorder" Property="Background" Value="#E81123" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="TitlebarCloseButtonBorder" Property="Background" Value="#F1707A" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <TextBlock Name="WindowTitleTextBlock"
                   Grid.Column="1"
                   Text="{Binding Title, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
        </TextBlock>
        <Button Name="MinimizeWindowButton"
                Style="{StaticResource TitlebarMinimizeButtonStyle}"
                Grid.Column="2"
                RenderOptions.EdgeMode="Aliased"
                Click="MinimizeWindowButton_Click">
            <Path Data="M 18,15 H 28"
			      Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			      StrokeThickness="1" />
        </Button>
        <Button Name="MaximizeWindowButton"
                Style="{StaticResource TitlebarMaximizeButtonStyle}"
		        Grid.Column="3"
                Click="MaximizeWindowButton_Click">
            <Path Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z"
			      Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			      StrokeThickness="1" />
        </Button>
        <Button Name="RestoreWindowButton"
                Style="{StaticResource TitlebarMaximizeButtonStyle}"
		        Grid.Column="3"
                Click="RestoreWindowButton_Click">
            <Path Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5"
			      Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			      StrokeThickness="1" />
        </Button>
        <Button Name="CloseWindowButton"
                Style="{StaticResource TitlebarCloseButtonStyle}"
                Grid.Column="4"
                Click="CloseWindowButton_Click">
            <Path Data="M 18,11 27,20 M 18,20 27,11"
			      Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			      StrokeThickness="1" />
        </Button>
    </Grid>
</UserControl>